#!/usr/bin/env bash
# set -e

usage() {
  echo "Usage: senv [-e | -d] <file>"
}

options=()
arguments=()
for arg in "$@"; do
  if [ "${arg:0:1}" = "-" ]; then
    if [ "${arg:1:1}" = "-" ]; then
      options[${#options[*]}]="${arg:2}"
    else
      index=1
      while option="${arg:$index:1}"; do
        [ -n "$option" ] || break
        options[${#options[*]}]="$option"
        let index+=1
      done
    fi
  else
    arguments[${#arguments[*]}]="$arg"
  fi
done

unset encrypt decrypt file

for option in "${options[@]}"; do
  case "$option" in
  "e" | "encrypt" )
    encrypt="1"
    file=".env"
    ;;
  "d" | "decrypt" )
    decrypt="1"
    file=".senv"
    ;;
  "i" | "identity" )
    identity="$OPTARG"
    ;;
  "w" | "write" )
    write="1"
    ;;
  * )
    usage >&2
    exit 1
    ;;
  esac
done

if [ -e "$arguments" ]; then
  file="$arguments"
fi

# detect default ssh identity (~/.ssh/id_rsa)
# identity=$(ssh-add -l | awk -F ' ' '{print $3}')

if [ ! -e "$SENV_KEY" ]; then
  echo "SENV_KEY=$SENV_KEY does not exist" >&2
  exit 1
fi

if [ -n "$encrypt" ]; then
  tmppubkey="/tmp/identity.pub.pem"
  openssl rsa -in $SENV_KEY -pubout > "$tmppubkey" 2>/dev/null

  if [ -t 0 ]; then
    if [ ! -e "$file" ]; then
      usage >&2
      exit 1
    fi
    while read line; do
      echo $line |  openssl rsautl -encrypt -pubin -inkey "$tmppubkey" | openssl base64 -A;
      echo
    done < $file
  else
    while read line; do
      echo $line | openssl rsautl -encrypt -pubin -inkey "$tmppubkey" | openssl base64 -A;
      echo
    done
  fi
  exit 0
fi

if [ -n "$decrypt" ]; then
  if [ -t 0 ]; then
    if [ ! -e "$file" ]; then
      usage >&2
      exit 1
    fi
    while read line; do
      echo $line | openssl base64 -A -d | openssl rsautl -decrypt -inkey $SENV_KEY 2>/dev/null
    done < $file
  else
    while read line; do
      echo $line | openssl base64 -A -d | openssl rsautl -decrypt -inkey $SENV_KEY 2>/dev/null
    done
  fi
  exit 0
fi

usage >&2
exit 1
